PROBLEM #2 STORE SYSTEM


Table Creation:

-- Create products table
CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    product_name VARCHAR(100),
    price DECIMAL(10,2),
    stock_quantity INTEGER
);

-- Create customers table
CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100)
);

-- Create orders table
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    customer_id INTEGER REFERENCES customers(id),
    order_date DATE
);

-- Create order_items table (linking orders & products)
CREATE TABLE order_items (
    order_id INTEGER REFERENCES orders(id),
    product_id INTEGER REFERENCES products(id),
    quantity INTEGER,
    PRIMARY KEY (order_id, product_id)
);


Messages:

CREATE TABLE

Query returned successfully in 23 msec.





Insert Data:

-- Insert products
INSERT INTO products (product_name, price, stock_quantity)
VALUES
('Laptop', 1200.00, 10),
('Smartphone', 800.00, 15),
('Headphones', 150.00, 30),
('Monitor', 300.00, 20),
('Keyboard', 50.00, 25);

-- Insert customers
INSERT INTO customers (first_name, last_name, email)
VALUES
('Alice', 'Brown', 'alice.b@email.com'),
('Bob', 'Smith', 'bob.s@email.com'),
('Charlie', 'Davis', 'charlie.d@email.com'),
('David', 'Wilson', 'david.w@email.com');

-- Insert orders
INSERT INTO orders (customer_id, order_date)
VALUES
(1, '2024-01-10'),
(2, '2024-01-11'),
(3, '2024-01-12'),
(4, '2024-01-13'),
(1, '2024-01-14');

-- Insert order items
INSERT INTO order_items (order_id, product_id, quantity)
VALUES
(1, 1, 1),
(1, 3, 2),
(2, 2, 1),
(2, 4, 1),
(3, 5, 1),
(3, 3, 2),
(4, 1, 1),
(4, 5, 1),
(5, 2, 1),
(5, 4, 1);


Messages:


INSERT 0 10

Query returned successfully in 23 msec.





Verify Data:

-- Verify products data
SELECT * FROM products;

Output:
 id | product_name | price   | stock_quantity
----+-------------+--------+---------------
 1  | Laptop      | 1200.00 | 10
 2  | Smartphone  | 800.00  | 15
 3  | Headphones  | 150.00  | 30
 4  | Monitor     | 300.00  | 20
 5  | Keyboard    | 50.00   | 25





-- Verify customers data
SELECT * FROM customers;

Output:
 id | first_name | last_name | email
----+------------+-----------+------------------
 1  | Alice      | Brown     | alice.b@email.com
 2  | Bob        | Smith     | bob.s@email.com
 3  | Charlie    | Davis     | charlie.d@email.com
 4  | David      | Wilson    | david.w@email.com





-- Verify orders data
SELECT * FROM orders;

Output:
 id | customer_id | order_date
----+------------+------------
 1  | 1          | 2024-01-10
 2  | 2          | 2024-01-11
 3  | 3          | 2024-01-12
 4  | 4          | 2024-01-13
 5  | 1          | 2024-01-14




-- Verify order items data
SELECT * FROM order_items;

Output:
 order_id | product_id | quantity
---------+-----------+----------
 1       | 1         | 1
 1       | 3         | 2
 2       | 2         | 1
 2       | 4         | 1
 3       | 5         | 1
 3       | 3         | 2
 4       | 1         | 1
 4       | 5         | 1
 5       | 2         | 1
 5       | 4         | 1




Required Queries:

-- Query: Retrieve all products and stock levels
SELECT product_name, stock_quantity FROM products;

Output:
 product_name  | stock_quantity
--------------+---------------
 Laptop       | 10
 Smartphone   | 15
 Headphones   | 30
 Monitor      | 20
 Keyboard     | 25





-- Query: Retrieve product names and quantities for Order #1
SELECT products.product_name, order_items.quantity
FROM order_items
JOIN products ON order_items.product_id = products.id
WHERE order_items.order_id = 1;

Output:
 product_name  | quantity
--------------+---------
 Laptop       | 1
 Headphones   | 2




-- Query: Retrieve all orders placed by a specific customer (Alice Brown)
SELECT orders.id AS order_id, products.product_name, order_items.quantity
FROM orders
JOIN order_items ON orders.id = order_items.order_id
JOIN products ON order_items.product_id = products.id
WHERE orders.customer_id = 1;

Output:
 order_id | product_name | quantity
---------+-------------+----------
 1       | Laptop      | 1
 1       | Headphones  | 2
 5       | Smartphone  | 1
 5       | Monitor     | 1




Update and Deletion of Data:

Update:
-- Update: Reduce stock after order placement
UPDATE products
SET stock_quantity = stock_quantity - (
    SELECT SUM(quantity) FROM order_items WHERE product_id = products.id
)
WHERE id IN (SELECT product_id FROM order_items WHERE order_id = 1);

Messages:
UPDATE 1

Query returned successfully in 28 msec.


Deletion:
-- Delete: Remove Order #5 and its items
DELETE FROM order_items WHERE order_id = 5;
DELETE FROM orders WHERE id = 5;

Messages:
DELETE 1

Query returned successfully in 22 msec.









